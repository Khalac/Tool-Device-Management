// Code generated by mockery v2.53.4. DO NOT EDIT.

package mocks

import (
	entity "BE_Manage_device/internal/domain/entity"

	mock "github.com/stretchr/testify/mock"
)

// RoleRepository is an autogenerated mock type for the RoleRepository type
type RoleRepository struct {
	mock.Mock
}

// GetAllRole provides a mock function with no fields
func (_m *RoleRepository) GetAllRole() []*entity.Roles {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetAllRole")
	}

	var r0 []*entity.Roles
	if rf, ok := ret.Get(0).(func() []*entity.Roles); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*entity.Roles)
		}
	}

	return r0
}

// GetAllUserByRoleId provides a mock function with given fields: roleId
func (_m *RoleRepository) GetAllUserByRoleId(roleId int64) []*entity.Users {
	ret := _m.Called(roleId)

	if len(ret) == 0 {
		panic("no return value specified for GetAllUserByRoleId")
	}

	var r0 []*entity.Users
	if rf, ok := ret.Get(0).(func(int64) []*entity.Users); ok {
		r0 = rf(roleId)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*entity.Users)
		}
	}

	return r0
}

// GetAllUserByRoleSlug provides a mock function with given fields: slug
func (_m *RoleRepository) GetAllUserByRoleSlug(slug string) []*entity.Users {
	ret := _m.Called(slug)

	if len(ret) == 0 {
		panic("no return value specified for GetAllUserByRoleSlug")
	}

	var r0 []*entity.Users
	if rf, ok := ret.Get(0).(func(string) []*entity.Users); ok {
		r0 = rf(slug)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*entity.Users)
		}
	}

	return r0
}

// GetRoleBySlug provides a mock function with given fields: roleSlug
func (_m *RoleRepository) GetRoleBySlug(roleSlug string) *entity.Roles {
	ret := _m.Called(roleSlug)

	if len(ret) == 0 {
		panic("no return value specified for GetRoleBySlug")
	}

	var r0 *entity.Roles
	if rf, ok := ret.Get(0).(func(string) *entity.Roles); ok {
		r0 = rf(roleSlug)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*entity.Roles)
		}
	}

	return r0
}

// GetSlugByRoleId provides a mock function with given fields: id
func (_m *RoleRepository) GetSlugByRoleId(id int64) string {
	ret := _m.Called(id)

	if len(ret) == 0 {
		panic("no return value specified for GetSlugByRoleId")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func(int64) string); ok {
		r0 = rf(id)
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// NewRoleRepository creates a new instance of RoleRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewRoleRepository(t interface {
	mock.TestingT
	Cleanup(func())
}) *RoleRepository {
	mock := &RoleRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
