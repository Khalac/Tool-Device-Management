{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/api/assets": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Get all assets",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Assets"
                ],
                "summary": "Get all assets",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {}
            },
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Create assets",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Assets"
                ],
                "summary": "Create assets",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Asset Name",
                        "name": "assetName",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Purchase Date (RFC3339 format, e.g. 2023-04-15T10:00:00Z)",
                        "name": "purchaseDate",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "Cost",
                        "name": "cost",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Warranty Expiry (RFC3339 format, e.g. 2023-12-31T23:59:59Z)",
                        "name": "warrantExpiry",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Serial Number",
                        "name": "serialNumber",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Category ID",
                        "name": "categoryId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Department ID",
                        "name": "departmentId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "redirect url",
                        "name": "redirectUrl",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "File to upload",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Image to upload",
                        "name": "image",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/assets-log/{asset_id}": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Get assets log by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Assets log"
                ],
                "summary": "Get assets log by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "asset_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "assetName",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "categoryId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "cost",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "departmentId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "email",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "serialNumber",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/assets-retired/{id}": {
            "patch": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Retired assets",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Assets"
                ],
                "summary": "Retired assets",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/assets/filter": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Get all assets have permission",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Assets"
                ],
                "summary": "Get all assets with filter",
                "parameters": [
                    {
                        "type": "string",
                        "name": "assetName",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "categoryId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "cost",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "departmentId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "email",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "serialNumber",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/assets/filter-dashboard": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Get Dashboard",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Assets"
                ],
                "summary": "Get Dashboard",
                "parameters": [
                    {
                        "type": "string",
                        "name": "categoryId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "departmentId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "\"csv\" hoặc \"pdf\" hoặc \"\"",
                        "name": "export",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/assets/{id}": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Get assets",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Assets"
                ],
                "summary": "Get assets",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {}
            },
            "put": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Update assets",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Assets"
                ],
                "summary": "Update assets",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Asset Name",
                        "name": "assetName",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Purchase Date (RFC3339 format, e.g. 2023-04-15T10:00:00Z)",
                        "name": "purchaseDate",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "Cost",
                        "name": "cost",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Warranty Expiry (RFC3339 format, e.g. 2023-12-31T23:59:59Z)",
                        "name": "warrantExpiry",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Serial Number",
                        "name": "serialNumber",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Serial Number",
                        "name": "status",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Category ID",
                        "name": "categoryId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Department ID",
                        "name": "departmentId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "File to upload",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Image to upload",
                        "name": "image",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {}
            },
            "delete": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Delete assets",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Assets"
                ],
                "summary": "Delete assets",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/assignments": {
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Create assignment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Assignments"
                ],
                "summary": "Create assignment",
                "parameters": [
                    {
                        "description": "Data",
                        "name": "assignment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.AssignmentCreateRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/assignments/filter": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Get all assign have permission",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Assignments"
                ],
                "summary": "Get all assign with filter",
                "parameters": [
                    {
                        "type": "string",
                        "name": "emailAssign",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "emailAssigned",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/assignments/{id}": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Get assignment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Assignments"
                ],
                "summary": "Get assignment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {}
            },
            "put": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Update assignment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Assignments"
                ],
                "summary": "Update assignment",
                "parameters": [
                    {
                        "description": "Data",
                        "name": "assignment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.AssignmentCreateRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/auth/login": {
            "post": {
                "description": "Login",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "Data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UserLoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ApiResponseSuccessStruct"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ApiResponseFail"
                        }
                    }
                }
            }
        },
        "/api/auth/logout": {
            "post": {
                "description": "Logout",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Logout",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ApiResponseSuccessNoData"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ApiResponseFail"
                        }
                    }
                }
            }
        },
        "/api/auth/refresh": {
            "post": {
                "description": "Refresh Token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Refresh Token",
                "parameters": [
                    {
                        "description": "Data",
                        "name": "refresh_token",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.RefreshRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ApiResponseSuccessStruct"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dto.ApiResponseFail"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/dto.ApiResponseFail"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ApiResponseFail"
                        }
                    }
                }
            }
        },
        "/api/auth/register": {
            "post": {
                "description": "Register user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Register user",
                "parameters": [
                    {
                        "description": "Data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UserRegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.ApiResponseSuccessNoData"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ApiResponseFail"
                        }
                    }
                }
            }
        },
        "/api/categories": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Get all categories",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Get all categories",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {}
            },
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Create categories",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Create categories",
                "parameters": [
                    {
                        "description": "Data",
                        "name": "category",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateCategoryRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/categories/{id}": {
            "delete": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Delete category via id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Delete category",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/departments": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Get all departments",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Departments"
                ],
                "summary": "Get all departments",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {}
            },
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Create departments",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Departments"
                ],
                "summary": "Create departments",
                "parameters": [
                    {
                        "description": "Data",
                        "name": "department",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateDepartmentRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/departments/{id}": {
            "delete": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Delete department via id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Departments"
                ],
                "summary": "Delete department",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/locations": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Get all location",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Locations"
                ],
                "summary": "Get all location",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {}
            },
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Create location",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Locations"
                ],
                "summary": "Create Location",
                "parameters": [
                    {
                        "description": "Data",
                        "name": "location",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateLocationRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/locations/{id}": {
            "delete": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Delete location via id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Locations"
                ],
                "summary": "Delete location",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/maintenance-schedules": {
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Create maintenanceSchedules",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MaintenanceScheduless"
                ],
                "summary": "Create maintenanceSchedules",
                "parameters": [
                    {
                        "description": "Data",
                        "name": "MaintenanceSchedules",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateMaintenanceSchedulesRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/maintenance-schedules/{id}": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Get maintenanceSchedules",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MaintenanceScheduless"
                ],
                "summary": "Get maintenanceSchedules by assetId",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "asset_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/request-transfer": {
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Request Transfer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "RequestTransfer"
                ],
                "summary": "Request Transfer",
                "parameters": [
                    {
                        "description": "Data",
                        "name": "Request-Transfer",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateRequestTransferRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/request-transfer/accept/{id}": {
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Accept Request Transfer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "RequestTransfer"
                ],
                "summary": "Accept Request Transfer",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "request_transfer_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/request-transfer/deny/{id}": {
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Deny Request Transfer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "RequestTransfer"
                ],
                "summary": "Deny Request Transfer",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "request_transfer_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/request-transfer/filter": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Get all request transfer have permission",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "RequestTransfer"
                ],
                "summary": "Get all RequestTransfer with filter",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/request-transfer/{id}": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Get request transfer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "RequestTransfer"
                ],
                "summary": "Get request transfer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/roles": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "GetRole",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Roles"
                ],
                "summary": "GetRole",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/user/forget-password": {
            "post": {
                "description": "Email reset password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Email reset password",
                "parameters": [
                    {
                        "description": "Data",
                        "name": "Email_Reset_Password",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CheckPasswordReset"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ApiResponseSuccessNoData"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ApiResponseFail"
                        }
                    }
                }
            }
        },
        "/api/user/information": {
            "patch": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Update Information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Update Information",
                "parameters": [
                    {
                        "description": "Data",
                        "name": "Information",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateInformationUserRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ApiResponseSuccessStruct"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ApiResponseFail"
                        }
                    }
                }
            }
        },
        "/api/user/password-reset": {
            "patch": {
                "description": "reset password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Password-reset",
                "parameters": [
                    {
                        "description": "Data",
                        "name": "Password-reset",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UserRequestResetPassword"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ApiResponseSuccessNoData"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dto.ApiResponseFail"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ApiResponseFail"
                        }
                    }
                }
            }
        },
        "/api/user/role": {
            "patch": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Update Role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "roles"
                ],
                "summary": "Update Role",
                "parameters": [
                    {
                        "description": "Data",
                        "name": "Role",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateRoleUserRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ApiResponseSuccessStruct"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ApiResponseFail"
                        }
                    }
                }
            }
        },
        "/api/user/session": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Get session",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get session",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ApiResponseSuccessStruct"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dto.ApiResponseFail"
                        }
                    }
                }
            }
        },
        "/api/user/{email}": {
            "delete": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Delete user via email",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Delete user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "email",
                        "name": "email",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ApiResponseSuccessNoData"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ApiResponseFail"
                        }
                    }
                }
            }
        },
        "/api/users": {
            "get": {
                "description": "Get all user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get all user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ApiResponseSuccessStruct"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.ApiResponseFail": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "dto.ApiResponseSuccessNoData": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "dto.ApiResponseSuccessStruct": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "data": {
                    "type": "string",
                    "example": "null"
                },
                "message": {
                    "type": "string",
                    "example": "Success"
                }
            }
        },
        "dto.AssignmentCreateRequest": {
            "type": "object",
            "required": [
                "assetId"
            ],
            "properties": {
                "assetId": {
                    "type": "integer"
                },
                "departmentId": {
                    "type": "integer"
                },
                "userId": {
                    "type": "integer"
                }
            }
        },
        "dto.CheckPasswordReset": {
            "type": "object",
            "required": [
                "email",
                "redirectUrl"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "redirectUrl": {
                    "type": "string"
                }
            }
        },
        "dto.CreateCategoryRequest": {
            "type": "object",
            "required": [
                "categoryName"
            ],
            "properties": {
                "categoryName": {
                    "type": "string"
                }
            }
        },
        "dto.CreateDepartmentRequest": {
            "type": "object",
            "required": [
                "departmentName",
                "locationId"
            ],
            "properties": {
                "departmentName": {
                    "type": "string"
                },
                "locationId": {
                    "type": "integer"
                }
            }
        },
        "dto.CreateLocationRequest": {
            "type": "object",
            "required": [
                "locationName"
            ],
            "properties": {
                "locationName": {
                    "type": "string"
                }
            }
        },
        "dto.CreateMaintenanceSchedulesRequest": {
            "type": "object",
            "required": [
                "assetId",
                "endDate",
                "startDate"
            ],
            "properties": {
                "assetId": {
                    "type": "integer"
                },
                "endDate": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            }
        },
        "dto.CreateRequestTransferRequest": {
            "type": "object",
            "required": [
                "assetId",
                "departmentId"
            ],
            "properties": {
                "assetId": {
                    "type": "integer"
                },
                "departmentId": {
                    "type": "integer"
                }
            }
        },
        "dto.RefreshRequest": {
            "type": "object",
            "required": [
                "refreshToken"
            ],
            "properties": {
                "refreshToken": {
                    "type": "string"
                }
            }
        },
        "dto.UpdateInformationUserRequest": {
            "type": "object",
            "required": [
                "firstName",
                "lastName"
            ],
            "properties": {
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                }
            }
        },
        "dto.UpdateRoleUserRequest": {
            "type": "object",
            "required": [
                "roleTitle"
            ],
            "properties": {
                "roleTitle": {
                    "type": "string"
                }
            }
        },
        "dto.UserLoginRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "dto.UserRegisterRequest": {
            "type": "object",
            "required": [
                "email",
                "firstName",
                "lastName",
                "password",
                "redirectUrl"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "redirectUrl": {
                    "type": "string"
                }
            }
        },
        "dto.UserRequestResetPassword": {
            "type": "object",
            "required": [
                "newPassword",
                "token"
            ],
            "properties": {
                "newPassword": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        }
    }
}