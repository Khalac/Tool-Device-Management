// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/assets": {
            "get": {
                "description": "Get all assets",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "assets"
                ],
                "summary": "Get all assets",
                "responses": {}
            },
            "post": {
                "description": "Create assets",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "assets"
                ],
                "summary": "Create assets",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Asset Name",
                        "name": "asset_name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Purchase Date (RFC3339 format, e.g. 2023-04-15T10:00:00Z)",
                        "name": "purchase_date",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "Cost",
                        "name": "cost",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Owner ID",
                        "name": "owner",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Warranty Expiry (RFC3339 format, e.g. 2023-12-31T23:59:59Z)",
                        "name": "warrant_expiry",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Status",
                        "name": "status",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Serial Number",
                        "name": "serial_number",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Category ID",
                        "name": "category_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Department ID",
                        "name": "department_id",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "File to upload",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Image to upload",
                        "name": "image",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/assets/{id}": {
            "get": {
                "description": "Get  assets",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "assets"
                ],
                "summary": "Get  assets",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/auth/login": {
            "post": {
                "description": "Login",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "Data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UserLoginRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/auth/logout": {
            "post": {
                "description": "Logout",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Logout",
                "responses": {}
            }
        },
        "/api/auth/refresh": {
            "post": {
                "description": "Refresh Token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Refresh Token",
                "parameters": [
                    {
                        "description": "Data",
                        "name": "refresh_token",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.RefreshRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/auth/register": {
            "post": {
                "description": "Register user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Register user",
                "parameters": [
                    {
                        "description": "Data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UserRegisterRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/categories": {
            "get": {
                "description": "Get all categories",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "categories"
                ],
                "summary": "Get all categories",
                "responses": {}
            },
            "post": {
                "description": "Create categories",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "categories"
                ],
                "summary": "Create categories",
                "parameters": [
                    {
                        "description": "Data",
                        "name": "category",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateCategoryRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/categories/{id}": {
            "delete": {
                "description": "Delete category via id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "categories"
                ],
                "summary": "Delete category",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/departments": {
            "get": {
                "description": "Get all departments",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "departments"
                ],
                "summary": "Get all departments",
                "responses": {}
            },
            "post": {
                "description": "Create departments",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "departments"
                ],
                "summary": "Create departments",
                "parameters": [
                    {
                        "description": "Data",
                        "name": "department",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateDepartmentRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/departments/{id}": {
            "delete": {
                "description": "Delete department via id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "departments"
                ],
                "summary": "Delete department",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/locations": {
            "get": {
                "description": "Get all location",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "locations"
                ],
                "summary": "Get all location",
                "responses": {}
            },
            "post": {
                "description": "Create location",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "locations"
                ],
                "summary": "Create Location",
                "parameters": [
                    {
                        "description": "Data",
                        "name": "location",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateLocationRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/locations/{id}": {
            "delete": {
                "description": "Delete location via id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "locations"
                ],
                "summary": "Delete location",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/user/forget-password": {
            "post": {
                "description": "Email reset password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Email reset password",
                "parameters": [
                    {
                        "description": "Data",
                        "name": "Email_Reset_Password",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CheckPasswordReset"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/user/password-reset": {
            "patch": {
                "description": "reset password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Password-reset",
                "parameters": [
                    {
                        "description": "Data",
                        "name": "Password-reset",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UserRequestResetPassword"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/user/session": {
            "get": {
                "description": "Get session",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get session",
                "responses": {}
            }
        },
        "/api/user/{email}": {
            "delete": {
                "description": "Delete user via email",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Delete user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "email",
                        "name": "email",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        }
    },
    "definitions": {
        "dto.CheckPasswordReset": {
            "type": "object",
            "required": [
                "email",
                "redirectUrl"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "redirectUrl": {
                    "type": "string"
                }
            }
        },
        "dto.CreateCategoryRequest": {
            "type": "object",
            "required": [
                "category_name"
            ],
            "properties": {
                "category_name": {
                    "type": "string"
                }
            }
        },
        "dto.CreateDepartmentRequest": {
            "type": "object",
            "required": [
                "department_name",
                "location_id"
            ],
            "properties": {
                "department_name": {
                    "type": "string"
                },
                "location_id": {
                    "type": "integer"
                }
            }
        },
        "dto.CreateLocationRequest": {
            "type": "object",
            "required": [
                "location_name"
            ],
            "properties": {
                "location_name": {
                    "type": "string"
                }
            }
        },
        "dto.RefreshRequest": {
            "type": "object",
            "required": [
                "refresh_token"
            ],
            "properties": {
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "dto.UserLoginRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "dto.UserRegisterRequest": {
            "type": "object",
            "required": [
                "email",
                "first_name",
                "last_name",
                "password",
                "redirectUrl"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "redirectUrl": {
                    "type": "string"
                }
            }
        },
        "dto.UserRequestResetPassword": {
            "type": "object",
            "required": [
                "new_password",
                "token"
            ],
            "properties": {
                "new_password": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
